---
import type {GetStaticPaths} from "astro";
import {AstroError} from "astro/errors";

import {loadContentLocalizedProfile} from "../profile";
import {getContentLocales, loadContentLocaleMetadata} from "../locale";

import ProfilePageLayout from "../layouts/ProfilePageLayout.astro";

export const getStaticPaths = (async () => {
  const contentLocales = getContentLocales();
  if (!contentLocales) {
    return Promise.resolve([]);
  }

  try {
    const localeMetadatas = await Promise.all(contentLocales.map(async locale => await loadContentLocaleMetadata(locale)));

    return await Promise.all(contentLocales.map(async (contentLocale) => {
      return {
        "params": {contentLocale},
        "props": {
          "profile": await loadContentLocalizedProfile(contentLocale, import.meta.env.PROFILE),
          "localeMetadatas": localeMetadatas as [typeof localeMetadatas[number], ...typeof localeMetadatas[number][]]
        }
      };
    }));
  } catch (error) {
    /*
     * For some reason Astro doesnt invoke Vite's Error UI when
     * error is being thrown from async function, so we need to
     * do such weird forwarding things here: 
     */
    if (error instanceof AstroError) {
      throw new AstroError(error.message, error.hint);
    }
    if (error instanceof Error) {
      throw new AstroError(error.message);
    }
    throw error;
  }
}) satisfies GetStaticPaths;

const {profile, localeMetadatas} = Astro.props;
---

<ProfilePageLayout {profile} locale={{"name": Astro.params.contentLocale, "metadatas": localeMetadatas}} />