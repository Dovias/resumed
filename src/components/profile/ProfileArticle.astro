---
import type {Polymorphic} from "astro/types";

import type {Accent} from "../../types";

export type AttributeProps = {
  "accent": Accent;
  "label": string;
};

type _Props = Omit<Polymorphic<AttributeProps & {
  "as": "article";
}>, "as">;

export type Props = _Props;

const {accent, label, "class": className, ...props} = Astro.props;
---
<article class:list={["profile-article", className]} {...props}>
  <h2 class={`profile-article__header-${accent}`}>{label}</h2>
  <slot />
</article>


<style lang="scss" is:global>
  @use "../../style/configuration/breakpoint";
  @use "../../style/configuration/font";

  @use "../../style/mixins/panel" as *;

  .profile-article {
    @include panel(
      $padding_size_name: "medium",
      $border_radius_name: "large",
      $shadow_offset_size_name: "large",
      $color_variant_name: "primary",
      $color_name: "foreground"
    );

    &__header {
      @each $accent_type in ("primary", "secondary") {
        &-#{$accent_type} {
          @include panel(
            $padding_size_name: "medium",
            $border_radius_name: "large",
            $shadow_offset_size_name: "small",
            $color_variant_name: $accent_type,
            $color_name: "accent"
          );

          font-size: font.size("large");
          font-weight: font.weight("semibold");

          @media (min-width: breakpoint.size("medium")) {
            & {
              font-size: font.size("medium");
            }
          }

          @media (min-width: breakpoint.size("large")) {
            & {
              font-size: font.size("large");
            }
          }
        }
      }
    }
  }
</style>