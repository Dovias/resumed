---
import type {Polymorphic} from "astro/types";

import type {Accent} from "../../types";

export type AttributeProps = {
  "accent": Accent;
  "label": string;
};

type _Props = Omit<Polymorphic<AttributeProps & {
  "as": "article";
}>, "as">;

export type Props = _Props;

const {accent, label, ...props} = Astro.props;
---
<article class="profile-article" {...props}>
  <h2 class={`profile-article__header-${accent}`}>{label}</h2>
  <slot />
</article>


<style lang="scss" is:global>
  @use "../../style/configuration/breakpoint";
  @use "../../style/configuration/padding";
  @use "../../style/configuration/margin";
  @use "../../style/configuration/border";
  @use "../../style/configuration/shadow";
  @use "../../style/configuration/color";
  @use "../../style/configuration/font";

  @mixin _panel($border_size_name, $accent_type, $color_name) {
    padding: padding.size("medium");
    border: border.size("small") solid color.variable("contour");
    border-radius: border.radius("large");
    box-shadow: shadow.size($border_size_name) shadow.size($border_size_name) 0 color.variable("contour");

    background: color.variable($accent_type, $color_name);
    color: color.variable($accent_type, "text", $color_name);
  }

  .profile-article {
    @include _panel("large", "primary", "foreground");

    &__header {
      @each $accent_type in ("primary", "secondary") {
        &-#{$accent_type} {
          @include _panel("small", $accent_type, "accent");

          font-size: font.size("large");
          font-weight: font.weight("semibold");

          @media (min-width: breakpoint.size("medium")) {
            & {
              font-size: font.size("medium");
            }
          }

          @media (min-width: breakpoint.size("large")) {
            & {
              font-size: font.size("large");
            }
          }
        }
      }
    }
  }
</style>