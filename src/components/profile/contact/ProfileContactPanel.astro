---
import type {Profile} from "../../../profile";

import VCardQRCode from "../../vcard/VCardQRCode.astro";
import ProfileContactIconLink, {type Props as ProfileContactIconLinkProps} from "./ProfileContactIconLink.astro";
import ProfileArticlePanel from "../ProfileArticlePanel.astro";
import Paragraph from "../../text/Paragraph.astro";

export type Props = Pick<Profile, "names"> & Pick<Profile["contact"], "label" | "qr"> & {
  "links": ProfileContactIconLinkProps[];
};

const {names, links, label, qr} = Astro.props;
---

<ProfileArticlePanel label={label} accent="secondary">
  {qr.enabled &&
      <div class="contact-qr">
        <div class="contact-qr__container">
          <VCardQRCode {names} urls={links.map(link => link.url)} />
          <Paragraph importance="low"><em>{qr.description}</em></Paragraph>
        </div>
      </div>
  }
  
  <div class="contact-links">    
    {links.length > 0 && links.map(linkProps =>
      <ProfileContactIconLink {...linkProps}/>
    )}
  </div>
</ProfileArticlePanel>

<style lang="scss" is:global>
  @use "../../../style/configuration/padding";
  @use "../../../style/configuration/margin";
  @use "../../../style/configuration/border";
  @use "../../../style/configuration/color";

  .contact {
    &-qr {
      padding: padding.size("large");

      border: border.size("small") dashed color.variable("contour");
      border-radius: border.radius("large");

      &__container {
        max-width: 13em;

        margin: auto;
      }
    }

    &-links {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(14rem, 1fr));
      gap: 0.5em;

      margin: margin.size("medium") 0;
    }
  }
</style>