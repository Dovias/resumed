---
import type {RecordValue} from "../../types";
import type {Profile} from "../../profile";

import ArticlePanel, {type Props as ArticlePanelProps} from "../panel/ArticlePanel.astro";
import Paragraph from "../text/Paragraph.astro";
import HeadingPanel from "../panel/HeadingPanel.astro";

export type AttributeProps = Pick<RecordValue<Profile["aspects"]>, "label"> & {
  "entries": RecordValue<RecordValue<Profile["aspects"]>["entries"]>[];
};
export type Props = AttributeProps & Omit<ArticlePanelProps, "importance" | "emphasis">;

const {label, entries, ...props} = Astro.props;
---

<ArticlePanel importance="low" emphasis="high" {...props}>
  <HeadingPanel importance="low" emphasis="low" accent="primary">{label}</HeadingPanel>
  <div class="profile-aspect">
    {entries.map(({label, icon}) =>
      <article class="profile-aspect__card">
        <picture>
          <source srcset={icon.path} />
          <img alt={icon.description} height="22"/>
        </picture>
        <Paragraph importance="low">{label}</Paragraph>
      </article>
    )}
  </div>
</ArticlePanel>

<style lang="scss" is:global>
  @use "../../style/configuration/padding";
  @use "../../style/configuration/margin";

  @use "../../style/mixins/panel" as *;

  .profile-aspect {
    display: flex;
    flex-wrap: wrap;
    gap: margin.size("medium");

    margin: margin.size("medium") 0 margin.size("small") 0;

    &__card {
      @include panel(
        $padding_size_name: "large",
        $border_radius_name: "large",
        $shadow_offset_size_name: "small",
        $color_variant_name: "secondary",
        $color_name: "foreground"
      );

      flex: 1;

      text-align: center;
    }
  }
</style>
