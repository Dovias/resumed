---
import type {Polymorphic} from "astro/types";

import type {Importance} from "../../types";

export type AttributeProps = {
  "importance": Importance;
};

type _Props = Omit<Polymorphic<AttributeProps & {
  "as": "p";
}>, "as">;

export type Props = _Props;

const {importance, "class": className, ...props} = Astro.props;
---

<p class:list={[`paragraph-${importance}`, className]} {...props}>
  <slot />
</p>

<style lang="scss" is:global>
  @use "sass:map";

  @use "../../style/mixins/compound/font";

  $_paragraph_font_size_names: (
    "high": "large",
    "medium": "medium",
    "low": "small"
  );

  $_paragraph_font_weight_names: (
    "high": "medium",
    "medium": "medium",
    "low": "lowest"
  );

  @each $importance, $paragraph_font_size in $_paragraph_font_size_names {
    $paragraph_font_weight_name: map.get($_paragraph_font_weight_names, $importance);

    .paragraph-#{$importance} {
      @include font.text($paragraph_font_size, $paragraph_font_weight_name);
    }
  }
</style>

