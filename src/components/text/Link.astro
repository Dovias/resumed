---
import type {Polymorphic} from "astro/types";

import type {Importance} from "../../types";

export type AttributeProps = {
  "importance": Importance;
};

type _Props = Omit<Polymorphic<AttributeProps & {
  "as": "a";
}>, "as">;

export type Props = _Props;

const {importance, "class": className, ...props} = Astro.props;
---

<a class:list={[`link-${importance}`, className]} {...props}>
  <slot />
</a>

<style lang="scss" is:global>
  @use "sass:map";

  @use "../../style/mixins/color";
  @use "../../style/mixins/compound/font";

  $_link_font_size_names: (
    "high": "large",
    "medium": "medium",
    "low": "small"
  );

  %link {
    color: inherit;
  }

  @each $importance, $link_font_size in $_link_font_size_names {
    .link-#{$importance} {
      @extend %link;

      @include font.text($link_font_size, "low");

      &:active {
        @include color.selection;
      }
    }
  }
</style>