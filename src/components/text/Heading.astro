---
import type {HTMLTag, Polymorphic} from "astro/types";

import type {Importance} from "../../types";

export type AttributeProps = {
  "importance": Importance;
};

type _Props = Omit<Polymorphic<AttributeProps & {
  "as": "h1" | "h2" | "h3";
}>, "as">;

export type Props = _Props;

const {importance, "class": className, ...props} = Astro.props;

let Tag: HTMLTag;
if (importance === "high") {
  Tag = "h1";
} else if (importance == "medium") {
  Tag = "h2";
} else {
  Tag = "h3";
}
---

<Tag class:list={[`heading-${importance}`, className]} {...props}>
  <slot />
</Tag>

<style lang="scss" is:global>
  @use "sass:map";

  @use "../../style/mixins/compound/font";

  $_heading_font_size_names: (
    "high": "largest",
    "medium": "extra very large",
    "low": "very large"
  );

  $_heading_emphasis_names: (
    "high": "very high",
    "medium": "extra high",
    "low": "medium"
  );

  @each $importance, $heading_font_size in $_heading_font_size_names {
    $_heading_emphasis_name: map.get($_heading_emphasis_names, $importance);

    .heading-#{$importance} {
      @include font.text($heading_font_size, $_heading_emphasis_name);
    }
  }
</style>

